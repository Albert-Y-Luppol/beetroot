{"version":3,"sources":["main.js"],"names":["favoriteMovies","initTab","document","getElementById","noResultsTab","defaultArticleTab","tabsConatainer","fetchController","AbortController","submitController","loadResultsFlag","handleClicks","e","target","closest","btn","forms","addEventListener","handleTouchend","toggle","querySelector","add","getAttribute","delete","search","name","value","autofill","handleUnload","once","setTimeout","handleKeys","removeEventListener","code","showResults","removeCurrentTabs","showFavoriteMovieTab","id","localStorage","setItem","favoriteMoviesString","showFavoriteMovies","urlObject","size","tab","appendFavoriteMovieTab","img","URL","set","innerHTML","response","json","movie","cloneNode","querySelectorAll","src","append","hidden","setRate","dataset","imdbID","handleInput","classList","getPreviousBorder","currentElement","previousElementSibling","concat","setStars","remove","forEach","el","buildTab","previosRoundBorderEl","checkedInput","searchParams","matches","nextElementSibling","select","getNextBorder","nextRoundBorderEl","then","movies","noResults","abort","signal","err","results","toLowerCase","title","slice","length","window","preventDefault","preloadNextTab","showNextTab","loadMoreResults","fetch","searchResults","get","catch","preloadedTabs","push","Object","showFullMovieInfo","starsAmount","style","zIndex","opacity","body","scrollHeight","pageYOffset","documentElement","clientHeight","shift","apply","_toConsumableArray","scrollIntoView","alt","movieID","circle","circleLength","offsetHeight","offset","textContent","strokeDashoffset","Math","round","stars","handleSubmit","handleTouches","setFavoriteMovies","Set","getItem","trim","split"],"mappings":"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","file":"main.min.js","sourcesContent":["(()=>{\r\n    'use strict';\r\n\r\n    let initTab             = document.getElementById('search-start'),\r\n        noResultsTab        = document.getElementById('search-no-result'),\r\n        defaultArticleTab   = document.getElementById('article'),\r\n        tabsConatainer      = document.getElementById('tabs-container'),\r\n        fetchController     = new AbortController(),\r\n        submitController    = new AbortController(),\r\n        loadResultsFlag     = false,\r\n        favoriteMovies;\r\n    initSearch();\r\n    \r\n    \r\n    // start functions --> run once - onload\r\n    \r\n    \r\n    function initSearch(){\r\n        document.forms.search.name.focus();\r\n    \r\n        setInitialTab();\r\n        setFavoriteMovies();\r\n    }\r\n    \r\n    \r\n    function setFavoriteMovies(){\r\n    \r\n        window.addEventListener('beforeunload', handleUnload);\r\n    \r\n        if(localStorage.getItem('favoriteMovies')){\r\n    \r\n            favoriteMovies = new Set(localStorage.getItem('favoriteMovies').trim().split(' '));\r\n            return;\r\n    \r\n        } \r\n    \r\n        favoriteMovies = new Set();\r\n    \r\n    }\r\n    \r\n    \r\n    function setInitialTab(){\r\n        document.body.querySelector('.tabs__tabs').append(initTab);\r\n        initTab.hidden = false;\r\n    \r\n        document.forms.search.addEventListener('input', handleInput);\r\n    \r\n        document.forms.search.addEventListener('submit', handleSubmit);\r\n    \r\n        document.forms.search.addEventListener('keydown', handleKeys);\r\n    \r\n        document.forms.search.addEventListener('touchstart', handleTouches);\r\n    \r\n        document.body.addEventListener('click', handleClicks);\r\n    \r\n    \r\n    }\r\n\r\n    \r\n    // functions\r\n\r\n    function handleClicks(e){\r\n        if(e.target.closest('button.description__favorite')){\r\n            let btn = e.target.closest('button.description__favorite');\r\n    \r\n    \r\n            btn.querySelector('.description__favorite-star').classList.toggle('description__favorite-star--full');\r\n    \r\n            if(btn.querySelector('.description__favorite-star--full')){\r\n                favoriteMovies.add(btn.closest('article.tabs__tab').getAttribute('data-imdb-i-d'));\r\n            } else{\r\n                favoriteMovies.delete(btn.closest('article.tabs__tab').getAttribute('data-imdb-i-d'));\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    function handleTouches(e){\r\n        if (e.target.closest('input[name=\"name\"].search__name') && document.forms.search.autofill.value){\r\n            document.forms.search.addEventListener('touchend', handleTouchend, {once: true});\r\n            \r\n            setTimeout(()=>{\r\n                document.forms.search.removeEventListener('touchend', handleTouchend, {once: true});\r\n            }, 1000);\r\n        }\r\n        \r\n    \r\n        function handleTouchend(){\r\n            document.forms.search.name.value = document.forms.search.autofill.value;\r\n            document.forms.search.autofill.value = \"\";\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n    function handleKeys(e){\r\n        if(e.code == 'ArrowRight'){\r\n           \r\n            document.forms.search.name.value = document.forms.search.autofill.value;\r\n            document.forms.search.autofill.value = \"\";\r\n    \r\n        }\r\n    }\r\n    \r\n    \r\n    function handleUnload(){\r\n        let favoriteMoviesString = \"\";\r\n    \r\n        favoriteMovies.forEach(id=>favoriteMoviesString += id + \" \");\r\n    \r\n        localStorage.setItem('favoriteMovies', favoriteMoviesString);\r\n    }\r\n    function showFavoriteMovies(e){\r\n    \r\n        if(!e) return;\r\n    \r\n        showResults();\r\n    \r\n        if(!favoriteMovies.size){\r\n    \r\n            noResults();\r\n    \r\n            return;\r\n        }\r\n    \r\n        removeCurrentTabs();\r\n        \r\n        favoriteMovies.forEach(id=>showFavoriteMovieTab(id));\r\n    }\r\n    \r\n    \r\n    // functions\r\n    \r\n    \r\n    function showFavoriteMovieTab(id){\r\n    \r\n        let urlObject = new URL('https://www.omdbapi.com');\r\n    \r\n        urlObject.searchParams.set('apikey', 'bcd2d5b4');\r\n        urlObject.searchParams.set('i', id);\r\n    \r\n        fetch(urlObject)\r\n        .then(response=>response.json())\r\n        .then(movie=>{\r\n            buildTab(movie);\r\n        });\r\n    }\r\n    \r\n    \r\n    function buildTab(movie){\r\n        let tab = defaultArticleTab.cloneNode(true),\r\n            img = tab.querySelector('.poster__img');\r\n    \r\n        img.addEventListener('load', appendFavoriteMovieTab, {once: true});\r\n    \r\n        if(movie['Poster'] != 'N/A') {\r\n            img.src = movie['Poster'];\r\n        } else {\r\n            img.src = './img/no-cover.png';\r\n        }\r\n            \r\n        img.alt = movie['Title'];  \r\n    \r\n        tab.querySelector('.description__title').innerHTML = `${movie['Title']}`;\r\n        tab.querySelector('.description__subtitle').innerHTML = `Released in ${movie['Year']} year`;\r\n        tab.dataset.imdbID = movie['imdbID'];\r\n    \r\n        let btn = tab.querySelector('button.description__favorite');\r\n        btn.querySelector('.description__favorite-star').classList.toggle('description__favorite-star--full');\r\n    \r\n        tab.id = \"\";\r\n        tab.querySelector('.description__main').innerHTML = `<p>${movie['Plot'] != \"N/A\" ? movie['Plot'] : \"\" }</p>`;\r\n    \r\n        if(movie['imdbRating'] != 'N/A'){\r\n    \r\n            tab.querySelector('.rate__amount').innerHTML = movie['imdbRating'];\r\n    \r\n            setStars(tab);\r\n        }\r\n        tab.querySelector('.description__btn').remove();\r\n        tab.classList.remove('tabs__tab--small');\r\n        tab.querySelectorAll('[class*=\"--small\"]').forEach(el=>{\r\n            el.classList.remove(el.classList[0] + '--small');\r\n        });\r\n    }\r\n    \r\n    \r\n    function appendFavoriteMovieTab(e){\r\n        // console.log(e.target);\r\n        let tab = e.target.closest('.tabs__tab');\r\n        tabsConatainer.append(tab);\r\n        tab.classList.add('flipInX');\r\n        tab.hidden = false;\r\n        setRate(tab);\r\n    }\r\n    function handleInput(e){\r\n    \r\n        if(e.target.closest('input[name=\"video-type\"]')){\r\n    \r\n            if(document.forms.search.querySelector('input[name=\"video-type\"]:checked').value == 'favorite') showFavoriteMovies(e);\r\n            \r\n            document.forms.search.querySelector('.search__radio--before').classList.remove('search__radio--before');\r\n    \r\n            document.forms.search.querySelector('.search__radio--after').classList.remove('search__radio--after');\r\n    \r\n            let previosRoundBorderEl = getPreviousBorder(e.target.closest('input[name=\"video-type\"]')),\r\n                nextRoundBorderEl = getNextBorder(e.target.closest('input[name=\"video-type\"]'));\r\n    \r\n            previosRoundBorderEl.classList.add('search__radio--before');\r\n            nextRoundBorderEl.classList.add('search__radio--after');\r\n    \r\n            // functions\r\n    \r\n    \r\n            function getPreviousBorder(checkedInput){\r\n                let currentElement = checkedInput.previousElementSibling;\r\n    \r\n                while(currentElement != null){\r\n            \r\n                    if(currentElement.matches('.search__radio')){\r\n                        return currentElement;\r\n                    }\r\n    \r\n                    currentElement = currentElement.previousElementSibling;\r\n                }\r\n    \r\n                return document.forms.search.querySelector('.search__stub--left');\r\n            }\r\n    \r\n            function getNextBorder(checkedInput){\r\n                let currentElement = checkedInput.nextElementSibling.nextElementSibling; //skip current label;\r\n    \r\n                while(currentElement != null){\r\n    \r\n                    if(currentElement.matches('.search__radio')){\r\n                        return currentElement;\r\n                    }\r\n    \r\n                    currentElement = currentElement.nextElementSibling;\r\n                }\r\n    \r\n                return document.forms.search.querySelector('.search__stub--right');\r\n            }\r\n    \r\n            if(e.target.closest('input[name=\"video-type\"]').value == 'favorite') {\r\n                setTimeout(showFavoriteMovies, 0);\r\n                return;\r\n            }\r\n    \r\n        }\r\n    \r\n        //apikey bcd2d5b4\r\n    \r\n        document.forms.search.autofill.value = \"\";\r\n        let urlObject = new URL('https://www.omdbapi.com');\r\n    \r\n        urlObject.searchParams.set('apikey', 'bcd2d5b4');\r\n        urlObject.searchParams.set('type', `${document.forms.search.querySelector('input[name=\"video-type\"]:checked').value}`);\r\n        urlObject.searchParams.set('t', `${document.forms.search.name.value}`);\r\n        fetchController.abort();\r\n        fetchController = new AbortController();\r\n       \r\n        fetch(urlObject, {\r\n            signal: fetchController.signal\r\n        }).then(response=>response.json())\r\n        .then(movies=>{\r\n            if(movies['Response'] != 'True') return;\r\n            // console.log(movies);\r\n            let title = movies['Title'];\r\n            if(document.forms.search.name.value.toLowerCase() == title.slice(0, document.forms.search.name.value.length).toLowerCase()){\r\n                document.forms.search.autofill.value = document.forms.search.name.value + title.slice(document.forms.search.name.value.length);\r\n            }\r\n        }).catch(err=>{\r\n            if(err.name != 'AbortError') throw err;\r\n        });\r\n    \r\n    }\r\n    \r\n    \r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n    \r\n        if(document.forms.search.querySelector('input[name=\"video-type\"]:checked').value == 'favorite') return;\r\n    \r\n        // console.log('submited!');\r\n        document.forms.search.name.select();\r\n    \r\n        let urlObject = new URL('https://www.omdbapi.com');\r\n        \r\n        urlObject.searchParams.set('apikey', 'bcd2d5b4');\r\n        urlObject.searchParams.set('type', `${document.forms.search.querySelector('input[name=\"video-type\"]:checked').value}`);\r\n        urlObject.searchParams.set('s', `${document.forms.search.name.value}`);\r\n        urlObject.searchParams.set('page', 1);\r\n        fetchController.abort();\r\n        submitController.abort();\r\n        submitController = new AbortController();\r\n       \r\n        fetch(urlObject, {\r\n            signal: submitController.signal\r\n        }).then(response=>response.json())\r\n        .then(movies=>{\r\n            // console.log(movies);\r\n            if(movies['Response'] != 'True') {\r\n                noResults();\r\n                return;\r\n            }\r\n            \r\n            urlObject.searchParams.set('page', +urlObject.searchParams.get('page') + 1);\r\n    \r\n            showResults(movies, urlObject);\r\n    \r\n        }).catch(err=>{\r\n            if(err.name != 'AbortError') throw err;\r\n        });\r\n    \r\n    }\r\n    \r\n    \r\n    function showResults(results, urlObject){\r\n        // console.log(results);\r\n    \r\n        if(document.forms.search.querySelector('input[name=\"video-type\"]:checked').value == 'favorite') {\r\n            results = new Object();\r\n            results['Search'] = null;\r\n        }\r\n    \r\n        removeCurrentTabs();\r\n    \r\n        let preloadedTabs = [],\r\n            searchResults = results['Search'];\r\n    \r\n        loadResultsFlag = true;\r\n    \r\n        window.addEventListener('scroll', preloadNextTab);\r\n    \r\n        if(document.forms.search.querySelector('input[name=\"video-type\"]:checked').value == 'favorite') {\r\n            window.removeEventListener('scroll', preloadNextTab);\r\n            loadResultsFlag = false;\r\n            return;\r\n        }\r\n    \r\n        preloadNextTab();\r\n    \r\n    \r\n        // functions\r\n    \r\n    \r\n        function preloadNextTab(){\r\n            // console.log(loadResultsFlag);\r\n    \r\n            if(!loadResultsFlag) return;\r\n    \r\n            showNextTab();\r\n            loadMoreResults();\r\n    \r\n            if(searchResults.length == 0) return;\r\n    \r\n            if(preloadedTabs.length > 5) return;\r\n    \r\n            let tab = defaultArticleTab.cloneNode(true),\r\n                movie = searchResults.shift(),\r\n                img = tab.querySelector('.poster__img');\r\n    \r\n            if(movie['Poster'] != 'N/A') {\r\n                img.src = movie['Poster'];\r\n            } else {\r\n                img.src = './img/no-cover.png';\r\n            }\r\n            \r\n            img.alt = movie['Title'];\r\n    \r\n            // console.log(img);\r\n            // console.log(img.src);\r\n    \r\n            img.addEventListener('load', (e)=>{\r\n                setTimeout(()=>{\r\n                    // console.log('+1 preload');\r\n                    preloadedTabs.push(tab);\r\n    \r\n                    // Hide Loader\r\n                    document.getElementById('tab-loader').style.opacity = 0;\r\n                    document.getElementById('tab-loader').addEventListener('transitionend', (e)=>{\r\n                        e.target.style.zIndex = -1;\r\n                    }, {once: true});\r\n    \r\n                    preloadNextTab();\r\n                }, 0);\r\n            }, {once: true});\r\n    \r\n            tab.querySelector('.description__title').innerHTML = `${movie['Title']}`;\r\n            tab.querySelector('.description__subtitle').innerHTML = `Released in ${movie['Year']} year`;\r\n    \r\n            tab.id = \"\";\r\n            tab.dataset.imdbID = movie['imdbID'];\r\n    \r\n            if(favoriteMovies.has(movie['imdbID'])){\r\n                let btn = tab.querySelector('button.description__favorite');\r\n                btn.querySelector('.description__favorite-star').classList.toggle('description__favorite-star--full');\r\n            }\r\n    \r\n            tab.querySelector('.description__btn').addEventListener('click', showFullMovieInfo, {once: true});\r\n        }\r\n    \r\n    \r\n        function showFullMovieInfo(e){\r\n            let tab = e.target.closest('.tabs__tab'),\r\n                btn = e.target.closest('.description__btn'),\r\n                movieID = tab.getAttribute('data-imdb-i-d'),\r\n                urlObject = new URL('https://www.omdbapi.com');\r\n        \r\n            urlObject.searchParams.set('apikey', 'bcd2d5b4');\r\n            urlObject.searchParams.set('i', movieID);\r\n    \r\n            fetch(urlObject)\r\n            .then(response=>response.json())\r\n            .then(movie=>{\r\n                // console.log(movie);\r\n                tab.querySelector('.description__main').innerHTML = `<p>${movie['Plot'] != \"N/A\" ? movie['Plot'] : \"\" }</p>`;\r\n                if(movie['imdbRating'] != 'N/A'){\r\n    \r\n                    tab.querySelector('.rate__amount').innerHTML = movie['imdbRating'];\r\n    \r\n                    setRate(tab);\r\n    \r\n                    setStars(tab);\r\n                }\r\n                \r\n    \r\n            });\r\n    \r\n            tab.classList.remove('tabs__tab--small');\r\n            btn.style.opacity = 0;\r\n            btn.addEventListener('transitionend', ()=>{\r\n                btn.remove();\r\n                tab.scrollIntoView();\r\n            }, {once: true});\r\n            tab.querySelectorAll('[class*=\"--small\"]').forEach(el=>{\r\n                el.classList.remove(el.classList[0] + '--small');\r\n            });\r\n        }\r\n    \r\n    \r\n        function showNextTab(){\r\n    \r\n            if(preloadedTabs.length == 0) {\r\n    \r\n                //Task show Loader\r\n                document.getElementById('tab-loader').style.zIndex = 1;\r\n                document.getElementById('tab-loader').style.opacity = 1;\r\n                \r\n                return;\r\n            }\r\n    \r\n            // alert(document.body.scrollHeight - (pageYOffset + document.documentElement.clientHeight));\r\n    \r\n            if(document.body.scrollHeight - (pageYOffset + document.documentElement.clientHeight) > 100) return;\r\n    \r\n            // alert(document.body.scrollHeight - (pageYOffset + document.documentElement.clientHeight));\r\n    \r\n            let tab = preloadedTabs.shift();\r\n    \r\n    //Task --->>> animate tab\r\n            tab.classList.add('flipInX');\r\n            \r\n            tab.hidden = false;\r\n    \r\n            tabsConatainer.append(tab);\r\n        }\r\n    \r\n    \r\n        function loadMoreResults(){\r\n            if(searchResults.length > 5) return;\r\n    \r\n            submitController = new AbortController();\r\n    \r\n            fetch(urlObject, {\r\n                signal: submitController.signal\r\n            }).then(response=>response.json())\r\n            .then(movies=>{\r\n                // console.log(movies);\r\n                if(movies['Response'] != 'True') {\r\n                    loadResultsFlag = false;\r\n    \r\n                    window.removeEventListener('scroll', preloadNextTab);\r\n    \r\n                    return;\r\n                }\r\n                \r\n                urlObject.searchParams.set('page', +urlObject.searchParams.get('page') + 1);\r\n    \r\n                searchResults.push(...movies['Search']);\r\n    \r\n                preloadNextTab();\r\n    \r\n            }).catch(err=>{\r\n                if(err.name != 'AbortError') throw err;\r\n            });\r\n        }\r\n    }\r\n    function noResults(){\r\n        // console.log('No such movie!');\r\n    \r\n        removeCurrentTabs();\r\n    \r\n        let tab = noResultsTab.cloneNode(true);\r\n        tab.id = '';\r\n        tab.classList.add('flipInX');\r\n        tab.hidden = false; \r\n    \r\n        tabsConatainer.append(tab);\r\n    }\r\n    \r\n    \r\n    function removeCurrentTabs(){\r\n    \r\n        let  tabs = tabsConatainer.querySelectorAll('.tabs__tab');\r\n    \r\n        tabs.forEach(tab=>{\r\n            tab.remove();\r\n        });\r\n    }\r\n    \r\n    \r\n    function setRate(tab){\r\n    \r\n        let circle = tab.querySelector('.rate__current > circle'),\r\n            circleLength = tab.querySelector('.rate__maximal').offsetHeight * 3.14,\r\n            rate = +tab.querySelector('.rate__amount').textContent,\r\n            offset = ((10 - rate) / 10) * circleLength;\r\n            \r\n        circle.style.strokeDashoffset = offset;\r\n       \r\n    }\r\n    \r\n    \r\n    function setStars(tab){\r\n        let starsAmount = Math.round(tab.querySelector('.rate__amount').innerHTML / 2),\r\n            stars = tab.querySelectorAll('.poster__star');\r\n    \r\n        while(starsAmount){\r\n            starsAmount--;\r\n            stars[starsAmount].classList.add('poster__star--full');\r\n        }\r\n    }\r\n\r\n})();"]}