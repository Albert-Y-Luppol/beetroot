{"version":3,"names":[],"mappings":"","sources":["scripts.js"],"sourcesContent":["(function (){\r\n    'use strict';\r\n\r\n    let initTab = document.getElementById('search-start'),\r\n        noResultsTab = document.getElementById('search-no-result'),\r\n        defaultArticleTab = document.getElementById('article'),\r\n        tabsConatainer = document.getElementById('tabs-container'),\r\n        fetchController = new AbortController(),\r\n        submitController = new AbortController(),\r\n        loadResultsFlag = false; // remove the Flag >> handelld by listener\r\n    initSearch();\r\n\r\n\r\n    // functions\r\n\r\n\r\n    function initSearch(){\r\n        document.forms.search.name.focus();\r\n\r\n        setInitialTab();\r\n    }\r\n\r\n\r\n    function setInitialTab(){\r\n        document.body.querySelector('.tabs__tabs').append(initTab);\r\n        initTab.hidden = false;\r\n\r\n        document.forms.search.addEventListener('input', handleInput);\r\n\r\n        document.forms.search.addEventListener('submit', handleSubmit);\r\n\r\n        document.forms.search.addEventListener('keydown', handleKeys);\r\n\r\n        document.forms.search.addEventListener('touchstart', handleTouches);\r\n\r\n\r\n    }\r\n\r\n    function handleTouches(e){\r\n        if (e.target.closest('input[name=\"name\"].search__name') && document.forms.search.autofill.value){\r\n            document.forms.search.addEventListener('touchend', handleTouchend, {once: true});\r\n            \r\n            setTimeout(()=>{\r\n                document.forms.search.removeEventListener('touchend', handleTouchend, {once: true});\r\n            }, 1000);\r\n        }\r\n        \r\n\r\n        function handleTouchend(){\r\n            document.forms.search.name.value = document.forms.search.autofill.value;\r\n            document.forms.search.autofill.value = \"\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function handleKeys(e){\r\n        if(e.code == 'ArrowRight'){\r\n           \r\n            document.forms.search.name.value = document.forms.search.autofill.value;\r\n            document.forms.search.autofill.value = \"\";\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function handleInput(e){\r\n        //apikey bcd2d5b4\r\n        document.forms.search.autofill.value = \"\";\r\n        let urlObject = new URL('http://www.omdbapi.com');\r\n\r\n        urlObject.searchParams.set('apikey', 'bcd2d5b4');\r\n        urlObject.searchParams.set('type', `${document.forms.search.querySelector('input[name=\"video-type\"]:checked').value}`);\r\n        urlObject.searchParams.set('t', `${document.forms.search.name.value}`);\r\n        fetchController.abort();\r\n        fetchController = new AbortController();\r\n       \r\n        fetch(urlObject, {\r\n            signal: fetchController.signal\r\n        }).then(response=>response.json())\r\n        .then(movies=>{\r\n            if(movies['Response'] != 'True') return;\r\n            // console.log(movies);\r\n            let title = movies['Title'];\r\n            if(document.forms.search.name.value.toLowerCase() == title.slice(0, document.forms.search.name.value.length).toLowerCase()){\r\n                document.forms.search.autofill.value = document.forms.search.name.value + title.slice(document.forms.search.name.value.length);\r\n            }\r\n        }).catch(err=>{\r\n            if(err.name != 'AbortError') throw err;\r\n        });\r\n\r\n    }\r\n\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        // console.log('submited!');\r\n        document.forms.search.name.select();\r\n\r\n        let urlObject = new URL('http://www.omdbapi.com');\r\n        \r\n        urlObject.searchParams.set('apikey', 'bcd2d5b4');\r\n        urlObject.searchParams.set('type', `${document.forms.search.querySelector('input[name=\"video-type\"]:checked').value}`);\r\n        urlObject.searchParams.set('s', `${document.forms.search.name.value}`);\r\n        urlObject.searchParams.set('page', 1);\r\n        fetchController.abort();\r\n        submitController.abort();\r\n        submitController = new AbortController();\r\n       \r\n        fetch(urlObject, {\r\n            signal: submitController.signal\r\n        }).then(response=>response.json())\r\n        .then(movies=>{\r\n            // console.log(movies);\r\n            if(movies['Response'] != 'True') {\r\n                noResults();\r\n                return;\r\n            }\r\n            \r\n            urlObject.searchParams.set('page', +urlObject.searchParams.get('page') + 1);\r\n\r\n            showResults(movies, urlObject);\r\n\r\n        }).catch(err=>{\r\n            if(err.name != 'AbortError') throw err;\r\n        });\r\n\r\n    }\r\n\r\n\r\n    function noResults(){\r\n        // console.log('No such movie!');\r\n\r\n        removeCurrentTabs();\r\n\r\n        let tab = noResultsTab.cloneNode(true);\r\n        tab.id = '';\r\n        tab.hidden = false; \r\n\r\n        tabsConatainer.append(tab);\r\n    }\r\n\r\n\r\n    function showResults(results, urlObject){\r\n        // console.log(results);\r\n\r\n        removeCurrentTabs();\r\n\r\n        let preloadedTabs = [],\r\n            searchResults = results['Search'];\r\n\r\n        loadResultsFlag = true;\r\n\r\n        window.addEventListener('scroll', preloadNextTab);\r\n\r\n        preloadNextTab();\r\n\r\n\r\n        // functions\r\n\r\n\r\n        function preloadNextTab(){\r\n            // console.log(loadResultsFlag);\r\n\r\n            if(!loadResultsFlag) return;\r\n\r\n            showNextTab();\r\n            loadMoreResults();\r\n\r\n            if(preloadedTabs.length > 5) return;\r\n\r\n            let tab = defaultArticleTab.cloneNode(true),\r\n                movie = searchResults.shift(),\r\n                img = tab.querySelector('.poster__img');\r\n\r\n            img.src = movie['Poster'];\r\n            img.alt = movie['Title'];\r\n\r\n            // console.log(img);\r\n            // console.log(img.src);\r\n\r\n            img.addEventListener('load', (e)=>{\r\n                setTimeout(()=>{\r\n                    // console.log('+1 preload');\r\n                    preloadedTabs.push(tab);\r\n\r\n    //Task --->>>  Hide Loader\r\n\r\n                    preloadNextTab();\r\n                }, 0);\r\n            }, {once: true});\r\n\r\n            tab.querySelector('.description__title').innerHTML = `Release in <b>${movie['Year']}</b> `;\r\n\r\n            tab.id = \"\";\r\n            tab.dataset.imdbID = movie['imdbID'];\r\n        }\r\n\r\n\r\n        function showNextTab(){\r\n\r\n            if(preloadedTabs.length == 0) {\r\n\r\n    //Task --->>> show Loader\r\n\r\n                return;\r\n            }\r\n\r\n            // alert(document.body.scrollHeight - (pageYOffset + document.documentElement.clientHeight));\r\n            if(document.body.scrollHeight - (pageYOffset + document.documentElement.clientHeight) > 0) return;\r\n\r\n            let tab = preloadedTabs.shift();\r\n\r\n    //Task --->>> animate tab\r\n            \r\n            tab.hidden = false;\r\n\r\n            tabsConatainer.append(tab);\r\n        }\r\n\r\n\r\n        function loadMoreResults(){\r\n            if(searchResults.length > 5) return;\r\n\r\n            submitController = new AbortController();\r\n\r\n            fetch(urlObject, {\r\n                signal: submitController.signal\r\n            }).then(response=>response.json())\r\n            .then(movies=>{\r\n                // console.log(movies);\r\n                if(movies['Response'] != 'True') {\r\n                    loadResultsFlag = false;\r\n\r\n                    window.removeEventListener('scroll', preloadNextTab);\r\n\r\n                    return;\r\n                }\r\n                \r\n                urlObject.searchParams.set('page', +urlObject.searchParams.get('page') + 1);\r\n    \r\n                searchResults.push(...movies['Search']);\r\n    \r\n            }).catch(err=>{\r\n                if(err.name != 'AbortError') throw err;\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    function removeCurrentTabs(){\r\n\r\n        let  tabs = tabsConatainer.querySelectorAll('.tabs__tab');\r\n\r\n        tabs.forEach(tab=>{\r\n            tab.remove();\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // hideAllTabs();\r\n    // document.getElementById('search-start').hidden = false;\r\n    // setHeightOfCurentTab();\r\n    // document.body.querySelector('.tabs__tabs').addEventListener('transitionend', setRate);\r\n    // window.addEventListener('resize', resize);\r\n\r\n    // tabsInOut();\r\n\r\n\r\n    // functions\r\n\r\n    function hideAllTabs(tabs    = document.body.querySelectorAll('.tabs__tab')){\r\n        tabs.forEach(tab => tab.hidden = true);\r\n    }\r\n\r\n\r\n    function setHeightOfCurentTab(tab , box = document.body.querySelector('.tabs__tabs')){\r\n        if (tab == undefined){\r\n            let tabs = document.body.querySelectorAll('.tabs__tab');\r\n\r\n            tabs.forEach(t => {\r\n                if(!t.hidden) \r\n                tab = t;\r\n            });  \r\n        }\r\n\r\n        box.style.height = `${tab.offsetHeight}px`;\r\n    }\r\n\r\n\r\n    function tabsInOut(){\r\n        let tabBtns = document.body.querySelectorAll('.tabs__btn'),\r\n            box     = document.body.querySelector('.tabs__tabs');\r\n\r\n        tabBtns.forEach(tab=>tab.addEventListener('click', (e)=>changeTab(e)));\r\n\r\n\r\n        function changeTab(event){\r\n            event.preventDefault();\r\n            let clickBtn = event.target.closest('.tabs__btn'),\r\n                clickTab = document.getElementById(`${clickBtn.dataset.name}`);\r\n\r\n            if(clickTab.hidden == true){\r\n                tabBtns.forEach(tab=>tab.dataset.state = 'disabled');\r\n                clickBtn.dataset.state = 'active';\r\n                box.style.height = \"0px\";\r\n                box.addEventListener('transitionend', switchTabs);\r\n\r\n\r\n                function switchTabs(){\r\n                    if(box.offsetHeight == 0){\r\n                        hideAllTabs();\r\n                        clickTab.hidden = false;\r\n                        box.removeEventListener('transitionend', switchTabs);\r\n                        setHeightOfCurentTab(clickTab, box);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function setRate(){\r\n\r\n        document.body.querySelector('.tabs__tabs').removeEventListener('transitionend', setRate);\r\n        if(document.getElementById('info').hidden == false){\r\n            let circle = document.querySelector('.rate__current > circle'),\r\n            circleLength = document.querySelector('.rate__maximal').offsetHeight * 3.14,\r\n            rate = +document.querySelector('.rate__amount').textContent,\r\n            offset = ((10 - rate) / 10) * circleLength;\r\n            \r\n            circle.style.strokeDashoffset = offset;\r\n        } else {\r\n\r\n            let circle = document.querySelector('.rate__current > circle'),\r\n            circleLength = document.querySelector('.rate__maximal').offsetHeight * 3.14;\r\n\r\n            circle.style.strokeDashoffset = circleLength;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n    function resize(){\r\n        setHeightOfCurentTab();\r\n    }\r\n})();\r\n"],"file":"scripts.js"}