{"version":3,"sources":["scripts/_fn-ajax.js"],"names":["handleInput","e","target","closest","document","forms","search","querySelector","value","showFavoriteMovies","classList","remove","checkedInput","currentElement","previousElementSibling","matches","nextElementSibling","getPreviousBorder","previosRoundBorderEl","getNextBorder","nextRoundBorderEl","setTimeout","urlObject","searchParams","set","URL","fetchController","AbortController","fetch","name","signal","response","movies","then","json","title","toLowerCase","slice","length","err","autofill","catch","abort","select","submitController","concat","noResults","showResults","get","results","Object","loadResultsFlag","removeCurrentTabs","preloadedTabs","searchResults","loadMoreResults","window","preloadNextTab","movie","img","tab","addEventListener","getElementById","style","zIndex","opacity","body","scrollHeight","pageYOffset","documentElement","clientHeight","shift","add","hidden","tabsConatainer","append","removeEventListener","push","apply","_toConsumableArray","defaultArticleTab","cloneNode","dataset","imdbID","btn","once","getAttribute","innerHTML","setRate","favoriteMovies","has","toggle","showFullMovieInfo","querySelectorAll","el","movieID","showNextTab","setStars","forEach"],"mappings":"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","file":"_fn-ajax.min.js","sourcesContent":["function handleInput(e){\r\n\r\n    if(e.target.closest('input[name=\"video-type\"]')){\r\n\r\n        if(document.forms.search.querySelector('input[name=\"video-type\"]:checked').value == 'favorite') showFavoriteMovies(e);\r\n        \r\n        document.forms.search.querySelector('.search__radio--before').classList.remove('search__radio--before');\r\n\r\n        document.forms.search.querySelector('.search__radio--after').classList.remove('search__radio--after');\r\n\r\n        let previosRoundBorderEl = getPreviousBorder(e.target.closest('input[name=\"video-type\"]')),\r\n            nextRoundBorderEl = getNextBorder(e.target.closest('input[name=\"video-type\"]'));\r\n\r\n        previosRoundBorderEl.classList.add('search__radio--before');\r\n        nextRoundBorderEl.classList.add('search__radio--after');\r\n\r\n        // functions\r\n\r\n\r\n        function getPreviousBorder(checkedInput){\r\n            let currentElement = checkedInput.previousElementSibling;\r\n\r\n            while(currentElement != null){\r\n        \r\n                if(currentElement.matches('.search__radio')){\r\n                    return currentElement;\r\n                }\r\n\r\n                currentElement = currentElement.previousElementSibling;\r\n            }\r\n\r\n            return document.forms.search.querySelector('.search__stub--left');\r\n        }\r\n\r\n        function getNextBorder(checkedInput){\r\n            let currentElement = checkedInput.nextElementSibling.nextElementSibling; //skip current label;\r\n\r\n            while(currentElement != null){\r\n\r\n                if(currentElement.matches('.search__radio')){\r\n                    return currentElement;\r\n                }\r\n\r\n                currentElement = currentElement.nextElementSibling;\r\n            }\r\n\r\n            return document.forms.search.querySelector('.search__stub--right');\r\n        }\r\n\r\n        if(e.target.closest('input[name=\"video-type\"]').value == 'favorite') {\r\n            setTimeout(showFavoriteMovies, 0);\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    //apikey bcd2d5b4\r\n\r\n    document.forms.search.autofill.value = \"\";\r\n    let urlObject = new URL('https://www.omdbapi.com');\r\n\r\n    urlObject.searchParams.set('apikey', 'bcd2d5b4');\r\n    urlObject.searchParams.set('type', `${document.forms.search.querySelector('input[name=\"video-type\"]:checked').value}`);\r\n    urlObject.searchParams.set('t', `${document.forms.search.name.value}`);\r\n    fetchController.abort();\r\n    fetchController = new AbortController();\r\n   \r\n    fetch(urlObject, {\r\n        signal: fetchController.signal\r\n    }).then(response=>response.json())\r\n    .then(movies=>{\r\n        if(movies['Response'] != 'True') return;\r\n        // console.log(movies);\r\n        let title = movies['Title'];\r\n        if(document.forms.search.name.value.toLowerCase() == title.slice(0, document.forms.search.name.value.length).toLowerCase()){\r\n            document.forms.search.autofill.value = document.forms.search.name.value + title.slice(document.forms.search.name.value.length);\r\n        }\r\n    }).catch(err=>{\r\n        if(err.name != 'AbortError') throw err;\r\n    });\r\n\r\n}\r\n\r\n\r\nfunction handleSubmit(e){\r\n    e.preventDefault();\r\n\r\n    if(document.forms.search.querySelector('input[name=\"video-type\"]:checked').value == 'favorite') return;\r\n\r\n    // console.log('submited!');\r\n    document.forms.search.name.select();\r\n\r\n    let urlObject = new URL('https://www.omdbapi.com');\r\n    \r\n    urlObject.searchParams.set('apikey', 'bcd2d5b4');\r\n    urlObject.searchParams.set('type', `${document.forms.search.querySelector('input[name=\"video-type\"]:checked').value}`);\r\n    urlObject.searchParams.set('s', `${document.forms.search.name.value}`);\r\n    urlObject.searchParams.set('page', 1);\r\n    fetchController.abort();\r\n    submitController.abort();\r\n    submitController = new AbortController();\r\n   \r\n    fetch(urlObject, {\r\n        signal: submitController.signal\r\n    }).then(response=>response.json())\r\n    .then(movies=>{\r\n        // console.log(movies);\r\n        if(movies['Response'] != 'True') {\r\n            noResults();\r\n            return;\r\n        }\r\n        \r\n        urlObject.searchParams.set('page', +urlObject.searchParams.get('page') + 1);\r\n\r\n        showResults(movies, urlObject);\r\n\r\n    }).catch(err=>{\r\n        if(err.name != 'AbortError') throw err;\r\n    });\r\n\r\n}\r\n\r\n\r\nfunction showResults(results, urlObject){\r\n    // console.log(results);\r\n\r\n    if(document.forms.search.querySelector('input[name=\"video-type\"]:checked').value == 'favorite') {\r\n        results = new Object();\r\n        results['Search'] = null;\r\n    }\r\n\r\n    removeCurrentTabs();\r\n\r\n    let preloadedTabs = [],\r\n        searchResults = results['Search'];\r\n\r\n    loadResultsFlag = true;\r\n\r\n    window.addEventListener('scroll', preloadNextTab);\r\n\r\n    if(document.forms.search.querySelector('input[name=\"video-type\"]:checked').value == 'favorite') {\r\n        window.removeEventListener('scroll', preloadNextTab);\r\n        loadResultsFlag = false;\r\n        return;\r\n    }\r\n\r\n    preloadNextTab();\r\n\r\n\r\n    // functions\r\n\r\n\r\n    function preloadNextTab(){\r\n        // console.log(loadResultsFlag);\r\n\r\n        if(!loadResultsFlag) return;\r\n\r\n        showNextTab();\r\n        loadMoreResults();\r\n\r\n        if(searchResults.length == 0) return;\r\n\r\n        if(preloadedTabs.length > 5) return;\r\n\r\n        let tab = defaultArticleTab.cloneNode(true),\r\n            movie = searchResults.shift(),\r\n            img = tab.querySelector('.poster__img');\r\n\r\n        if(movie['Poster'] != 'N/A') {\r\n            img.src = movie['Poster'];\r\n        } else {\r\n            img.src = './img/no-cover.png';\r\n        }\r\n        \r\n        img.alt = movie['Title'];\r\n\r\n        // console.log(img);\r\n        // console.log(img.src);\r\n\r\n        img.addEventListener('load', (e)=>{\r\n            setTimeout(()=>{\r\n                // console.log('+1 preload');\r\n                preloadedTabs.push(tab);\r\n\r\n                // Hide Loader\r\n                document.getElementById('tab-loader').style.opacity = 0;\r\n                document.getElementById('tab-loader').addEventListener('transitionend', (e)=>{\r\n                    e.target.style.zIndex = -1;\r\n                }, {once: true});\r\n\r\n                preloadNextTab();\r\n            }, 0);\r\n        }, {once: true});\r\n\r\n        tab.querySelector('.description__title').innerHTML = `${movie['Title']}`;\r\n        tab.querySelector('.description__subtitle').innerHTML = `Released in ${movie['Year']} year`;\r\n\r\n        tab.id = \"\";\r\n        tab.dataset.imdbID = movie['imdbID'];\r\n\r\n        if(favoriteMovies.has(movie['imdbID'])){\r\n            let btn = tab.querySelector('button.description__favorite');\r\n            btn.querySelector('.description__favorite-star').classList.toggle('description__favorite-star--full');\r\n        }\r\n\r\n        tab.querySelector('.description__btn').addEventListener('click', showFullMovieInfo, {once: true});\r\n    }\r\n\r\n\r\n    function showFullMovieInfo(e){\r\n        let tab = e.target.closest('.tabs__tab'),\r\n            btn = e.target.closest('.description__btn'),\r\n            movieID = tab.getAttribute('data-imdb-i-d'),\r\n            urlObject = new URL('https://www.omdbapi.com');\r\n    \r\n        urlObject.searchParams.set('apikey', 'bcd2d5b4');\r\n        urlObject.searchParams.set('i', movieID);\r\n\r\n        fetch(urlObject)\r\n        .then(response=>response.json())\r\n        .then(movie=>{\r\n            // console.log(movie);\r\n            tab.querySelector('.description__main').innerHTML = `<p>${movie['Plot'] != \"N/A\" ? movie['Plot'] : \"\" }</p>`;\r\n            if(movie['imdbRating'] != 'N/A'){\r\n\r\n                tab.querySelector('.rate__amount').innerHTML = movie['imdbRating'];\r\n\r\n                setRate(tab);\r\n\r\n                setStars(tab);\r\n            }\r\n            \r\n\r\n        });\r\n\r\n        tab.classList.remove('tabs__tab--small');\r\n        btn.style.opacity = 0;\r\n        btn.addEventListener('transitionend', ()=>{\r\n            btn.remove();\r\n            tab.scrollIntoView();\r\n        }, {once: true});\r\n        tab.querySelectorAll('[class*=\"--small\"]').forEach(el=>{\r\n            el.classList.remove(el.classList[0] + '--small');\r\n        });\r\n    }\r\n\r\n\r\n    function showNextTab(){\r\n\r\n        if(preloadedTabs.length == 0) {\r\n\r\n            //Task show Loader\r\n            document.getElementById('tab-loader').style.zIndex = 1;\r\n            document.getElementById('tab-loader').style.opacity = 1;\r\n            \r\n            return;\r\n        }\r\n\r\n        // alert(document.body.scrollHeight - (pageYOffset + document.documentElement.clientHeight));\r\n\r\n        if(document.body.scrollHeight - (pageYOffset + document.documentElement.clientHeight) > 100) return;\r\n\r\n        // alert(document.body.scrollHeight - (pageYOffset + document.documentElement.clientHeight));\r\n\r\n        let tab = preloadedTabs.shift();\r\n\r\n//Task --->>> animate tab\r\n        tab.classList.add('flipInX');\r\n        \r\n        tab.hidden = false;\r\n\r\n        tabsConatainer.append(tab);\r\n    }\r\n\r\n\r\n    function loadMoreResults(){\r\n        if(searchResults.length > 5) return;\r\n\r\n        submitController = new AbortController();\r\n\r\n        fetch(urlObject, {\r\n            signal: submitController.signal\r\n        }).then(response=>response.json())\r\n        .then(movies=>{\r\n            // console.log(movies);\r\n            if(movies['Response'] != 'True') {\r\n                loadResultsFlag = false;\r\n\r\n                window.removeEventListener('scroll', preloadNextTab);\r\n\r\n                return;\r\n            }\r\n            \r\n            urlObject.searchParams.set('page', +urlObject.searchParams.get('page') + 1);\r\n\r\n            searchResults.push(...movies['Search']);\r\n\r\n            preloadNextTab();\r\n\r\n        }).catch(err=>{\r\n            if(err.name != 'AbortError') throw err;\r\n        });\r\n    }\r\n}"]}